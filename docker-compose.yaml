version: '3.8'
networks:
  traefik-network:
    driver: bridge
  db-network:
    driver: bridge
  app_net:
    driver: bridge

services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    command: --providers.file.filename=/etc/traefik/traefik.yaml --configFile=/etc/traefik/traefik.yaml
    ports:
      - "80:80"
      - "433:433"
      - "8080:8080"
    restart: unless-stopped
    logging:
      options:
        max-size: "10m"
        max-file: "5"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yaml:/etc/traefik/traefik.yaml:rw
      # - ./letsencrypt:/letsencrypt
    networks:
      - traefik-network
      - app_net

  prometheus:
    image: prom/prometheus
    user: root
    container_name: prometheus
    env_file:
      - ".env"
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/:/etc/prometheus/:rw
      - ${PROM_VOLUME}:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      # - 'storage.tsdb.retention.time=30D'
    networks:
      - traefik-network
      - app_net

  grafana:
    image: grafana/grafana
    user: root
    env_file:
      - ".env"
    depends_on:
      - prometheus
    volumes:
      - ${GRAFANA_VOLUME}:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      GF_SECURITY_DISABLE_INITIAL_ADMIN_CREATION: "true"
      GF_INSTALL_PLUGINS: grafana-piechart-panel
    networks:
      - app_net
    restart: unless-stopped
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  back-resto:
    build:
      context: ./api/back-resto
      dockerfile: Dockerfile
    container_name: back-resto
    working_dir: "/usr/src/app"
    environment:
      - LISTEN_PORT=3000
      # - MONGO_URL=mongodb://mongo_database
      - MSSQL_SERVER=msserver
      - MSSQL_DATABASE=CesiEat
      - MSSQL_DRIVER=msnodesqlv8
      - MSSQL_USER=sa
      - MSSQL_PASSWORD=example_123
    depends_on:
      - msserver
    networks:
      - traefik-network
      - db-network
    volumes:
      - ./api/back-resto/public/uploads/images:/usr/src/app/public/uploads/images

  front-commercial:
    build:
      context: ./api/front-commercial
      dockerfile: Dockerfile
    container_name: front-commercial
    working_dir: "/usr/src/app"
    environment:
      - LISTEN_PORT=8000
      # - MONGO_URL=mongodb://mongo_database
      - MSSQL_SERVER=msserver
      - MSSQL_DATABASE=CesiEat
      - MSSQL_DRIVER=msnodesqlv8
      - MSSQL_USER=sa
      - MSSQL_PASSWORD=example_123
    depends_on:
      - msserver
    networks:
      - traefik-network
      - db-network

  mon-app:
    build:
      context: ./api/mon-app
      dockerfile: Dockerfile
    container_name: mon-app
    working_dir: "/usr/src/app"
    environment:
      - LISTEN_PORT=8005
      # - MONGO_URL=mongodb://mongo_database
      - MSSQL_SERVER=msserver
      - MSSQL_DATABASE=CesiEat
      - MSSQL_DRIVER=msnodesqlv8
      - MSSQL_USER=sa
      - MSSQL_PASSWORD=example_123
    depends_on:
      - msserver
    networks:
      - traefik-network
      - db-network

  comm:
    build:
      context: ./api/commercial
      dockerfile: Dockerfile
    container_name: comm
    working_dir: "/usr/src/app"
    environment:
      - LISTEN_PORT=8000
      # - MONGO_URL=mongodb://mongo_database
      - MSSQL_SERVER=msserver
      - MSSQL_DATABASE=CesiEat
      - MSSQL_DRIVER=msnodesqlv8
      - MSSQL_USER=sa
      - MSSQL_PASSWORD=example_123
    depends_on:
      - msserver
    networks:
      - traefik-network
      - db-network
  back-livreur:
    build:
      context: ./api/back-livreur
      dockerfile: Dockerfile
    container_name: back-livreur
    working_dir: "/usr/src/app"
    environment:
      - LISTEN_PORT=3005
      # - MONGO_URL=mongodb://mongo_database
      - MSSQL_SERVER=msserver
      - MSSQL_DATABASE=CesiEat
      - MSSQL_DRIVER=msnodesqlv8
      - MSSQL_USER=sa
      - MSSQL_PASSWORD=example_123
    depends_on:
      - msserver
    networks:
      - traefik-network
      - db-network

  dev-api:
    build:
      context: ./api/dev
      dockerfile: Dockerfile
    container_name: dev-api
    working_dir: "/usr/src/app"
    environment:
      - LISTEN_PORT=8000
      - MONGO_URL=mongodb://mongo_database
      - MSSQL_SERVER=msserver
      - MSSQL_DATABASE=CesiEat
      - MSSQL_DRIVER=msnodesqlv8
      - MSSQL_USER=sa
      - MSSQL_PASSWORD=example_123
    depends_on:
      - msserver
    networks:
      - traefik-network
    volumes:
      - ./api/dev:/usr/src/app:rw

  dev-front:
    build:
      context: ./front/dev
      dockerfile: Dockerfile
    container_name: dev-front
    working_dir: "/usr/src/app"
    environment:
      - LISTEN_PORT=8080
    networks:
      - traefik-network
    volumes:
      - ./front/dev:/usr/src/app:rw

  msserver:
    image: mcmoe/mssqldocker:latest
    restart: unless-stopped
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: example_123
      MSSQL_USER: mssqluser
      MSSQL_PASSWORD: example_123
      MSSQL_DB: CesiEat
    ports:
      - "1433:1433" 

    volumes:
      - ./sqlserver:/var/opt/mssql/data/:rw
    labels:
      - traefik.enabled=false
    networks:
      - db-network

  mongo:
    image: mongo:latest
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example_123
    volumes:
      - ./mongo:/data/db:rw
    labels:
      - traefik.enabled=false
    networks:
      - db-network
